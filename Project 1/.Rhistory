vect
names()
names(vect)
vect2 <- c(11,2,NA)
names(vect2)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
install.packages("swirl")
swirl()
library("swirl", lib.loc="C:/Users/bergerd/Documents/R/win-library/3.0")
swirl()
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get M- function()
x
setmean <- function(mean)
m <<- mean
getmean <- function()
m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
casheman <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makevector(5)
makeVector(5)
get <- function()
sfdsd
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function()
x
setmean <- function(mean)
m <<- mean
getmean <- function()
m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
casheman <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(4)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function()
x
setmean <- function(mean)
m <<- mean
getmean <- function()
m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
casheman <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function()
x
setmean <- function(mean)
m <<- mean
getmean <- function()
m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
makeVector(20)
a <- makeVector()
a
class(a)
class(a$set)
a$set(c(1,2,3,4,5,6,7))
a$get
cachemean(a)
cachemean(a)
tf <- matrix(1:4,2,2)
tf
tf1 <- solve(tf)
tf1
tf * tf1
a$get
a$set(c(1:40))
a$set
a$get
cachemean(a)
cachemean(a)
x
x <<- y
m <<- NULL
class(m)
summary(m)
NULL
makeVector <- function(x = numeric()) {
set <- function(y) {
x <<- y
}
get <- function()
x
setmean <- function(mean)
m <<- mean
getmean <- function()
m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
a$set(c(2:55))
cachemean(a)
cachemean(a)
function()
x
class(fuction())
function() x
function() x
get <- function() x
get
class(get)
get(5)
get <- function() 5
get
get(5)
summary(get)
get <- function()
5
get()
get(4)
get()
class(get())
class(get)
get()
class(get())
a <- makeVector()
makeVector <- function(x = numeric()) {
#### set - this is how you cache the vector to x it seems using a$set(c())
set <- function(y) {
x <<- y
}
### get() returns a numeric vector number or returns whatever x is
get <- function()
x
setmean <- function(mean)
m <<- mean
### gets a numeric m
getmean <- function()
m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
### gets a numeric mean from above that was cached
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
a <- makeVector ###initialize
a$set(c(20:100))
a$set(c(1:200))
a$set(c(1,2,3,4,5,6,7))
makeVector <- function(x = numeric()) {
#### set - this is how you cache the vector to x it seems using a$set(c())
m <- NULL
set <- function(y) {
x <<- y
m <<-NULL
}
### get() returns a numeric vector number or returns whatever x is
get <- function()
x
setmean <- function(mean)
m <<- mean
### gets a numeric m
getmean <- function()
m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
### gets a numeric mean from above that was cached
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
a <- makeVector ###initialize
a$set(c(1,2,3,4)) ###set vector
a$set(c(1:10))
a$set(c(1:20))
limbs <- c(4, 3, 4, 3, 2, 4, 4, 14)names(limbs) <- c('One-Eye', 'Peg-Leg', 'Smitty', 'Hook',
'Scooter', 'Dan', 'Mikey', 'Davy Jones')
limbs <- c(4, 3, 4, 3, 2, 4, 4, 14)
names(limbs) <- c('One-Eye', 'Peg-Leg', 'Smitty', 'Hook',
'Scooter', 'Dan', 'Mikey', 'Davy Jones')
class(limbs)
names(limbs)
install.packages("sqldf")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",destfile = "gdp.csv")
gdp <- read.csv("gdp.csv")
gdpclean <- gdp[5:194,]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "edugdp.csv")
edu <- read.csv("edugdp.csv")
matched <- match(edu$"CountryCode",gdpclean$"X")
matchedclean <- na.omit(matched)
merged <- merge(gdpclean,edu,by.x = "X", by.y = "CountryCode", all = TRUE)
View(merged)
merged <- merge(gdpclean,edu,by.x = "X", by.y = "CountryCode", all = FALSE)
View(merged)
sortedmerge <- merged[sort(merged$"Gross.domestic.product.2012", decreasing = TRUE, na.last = FALSE),]
View(sortedmerge)
sorted <- gdpclean[sort(gdpclean$"Gross.domestic.product.2012", decreasing = TRUE, na.last = FALSE),]
View(sorted)
View(sortedmerge)
View(merged)
sort(merged$"Gross.domestic.product.2012", decreasing = TRUE, na.last = FALSE)
View(sortedmerge)
merged$"Gross.domestic.product.2012"
sort(merged$"Gross.domestic.product.2012", decreasing = TRUE, na.last = FALSE)
sort(merged$"Gross.domestic.product.2012", decreasing = TRUE)
read.table(file = "https://s3.amazonaws.com/coursera-uploads/user-eef2c746f39dba25b29935d3/972137/asst-3/53e364e0f8b411e39ec3a1437bf6f52c.txt")
project <- read.table(file = "https://s3.amazonaws.com/coursera-uploads/user-eef2c746f39dba25b29935d3/972137/asst-3/53e364e0f8b411e39ec3a1437bf6f52c.txt")
View(project)
read.csv(file = "https://s3.amazonaws.com/coursera-uploads/user-eef2c746f39dba25b29935d3/972137/asst-3/53e364e0f8b411e39ec3a1437bf6f52c.txt")
project <- read.csv(file = "https://s3.amazonaws.com/coursera-uploads/user-eef2c746f39dba25b29935d3/972137/asst-3/53e364e0f8b411e39ec3a1437bf6f52c.txt")
View(project)
project <- read.csv(file = "https://s3.amazonaws.com/coursera-uploads/user-9f203c447c2c35281ab8da1b/972137/asst-3/058ae210fa5c11e393e401f49cd64e7f.txt")
View(project)
merged <- merge(edu,q2clean, by.x = "CountryCode", by.y = "countrylong", all = FALSE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "q2.csv")
q2 <- read.csv("q2.csv")
q2clean <- q2[5:194,1:5]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "q4.csv")
edu <- read.csv("q4.csv")
merged <- merge(edu,q2clean, by.x = "CountryCode", by.y = "countrylong", all = FALSE)
names(q2clean) <- c("country","rank","na","countrylong","gdp")
merged <- merge(edu,q2clean, by.x = "CountryCode", by.y = "countrylong", all = FALSE)
View(`q2clean`)
merged <- merge(edu,q2clean, by.x = "CountryCode", by.y = "country", all = FALSE)
View(merged)
grep("[Jj]une",merged$"Special.Notes")
merged[grep("[Jj]une",merged$"Special.Notes"),"Speical.Notes"]
merged[grep("[Jj]une",merged$"Special.Notes"),]
merged[grep("[Jj]une",merged$"Special.Notes"),10]
merged[grep("[Jj]une",merged$"Special.Notes"),10]
merged[grep("Fiscal year end: June",merged$"Special.Notes"),10]
length(merged[grep("Fiscal year end: June",merged$"Special.Notes"),10])
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
format(sampleTimes,"%a %b %d")
weekday <- format(sampleTimes,"%a %b %d")
sampleTimes$2012
sampleTimes$"2012"
grep(sampleTimes, "2012"
)
grep(sampleTimes, "2012")
sampleTimes
sampleTimes < 2012-01-01 & > 2012-12-31
sampleTimes =< 2012-01-01 & => 2012-12-31
sampleTimes(=< 2012-01-01 & => 2012-12-31)
sampleTimes< 2012-01-01
sampleTimes<"2012-01-01"
format(sampleTimes,"%a %b %d")
time <- format(sampleTimes,"%a %b %d")
as.date(sampleTimes)
date(sampleTimes)
setwd("C:/Users/bergerd/Dropbox/R programming/Expl Project 1")
setwd("~/R/Working Directory/Expl Assignment 1")
read.data("household_power_consumption.txt", header = TRUE, skip = 66638, nrows = 2879, colClasses = c("Date","Date")
)
read.table("household_power_consumption.txt", header = TRUE, skip = 66638, nrows = 2879, colClasses = c("Date","Date"))
read.csv("household_power_consumption.txt", header = TRUE, skip = 66638, nrows = 2879, colClasses = c("Date","Date"))
data <- read.csv("household_power_consumption.txt", header = TRUE, skip = 66638, nrows = 2879, colClasses = c("Date","Date"))
data <- read.csv("household_power_consumption.txt", header = TRUE, skip = 66638, nrows = 2879, colClasses = c("Date","Date"))
View(data)
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, skip = 66638, nrows = 2879, colClasses = c("Date","Date"))
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, skip = 66638, nrows = 2879, colClasses = c("Date","Date"))
View(data)
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, skip = 66638, nrows = 2879)
View(data)
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = FALSE, skip = 66638, nrows = 2879)
View(data)
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, nrows = 0)
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, nrows = 1)
View(data)
headers(data)
names(data)
datanames <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, nrows = 1)
names(data)
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = names(data) , skip = 66638, nrows = 2879)
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = FALSE , skip = 66638, nrows = 2879)
View(data)
names(data) <- names(datanames)
View(data)
View(data)
View(datanames)
hist(data$"Global_active_power")
hist(data$"Global_active_power", color = red)
hist(data$"Global_active_power", color = "red")
hist(data$"Global_active_power", col = "red")
hist(data$"Global_active_power", col = red, xlab = "Global Active Power (kilowatts)", title = "Global Active Power")
hist(data$"Global_active_power", col = "red"", xlab = "Global Active Power (kilowatts)", title = "Global Active Power")
hist(data$"Global_active_power", col = "red", xlab = "Global Active Power (kilowatts)", title = "Global Active Power")
title(main = "Global Active Power")
hist(data$"Global_active_power", col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
plot1 <- hist(data$"Global_active_power", col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
png("plot1.png")
plot1
dev.off()
png("plot2.png")
plot1
dev.off()
png("plot2.png", widge = 480, height = 480)
hist(data$"Global_active_power", col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
hist(data$"Global_active_power", col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
png("plot1.png", widge = 480, height = 480)
hist(data$"Global_active_power", col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
png("plot1.png", widge = 480, height = 480)
hist(data$"Global_active_power", col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
png("plot1.png")
hist(data$"Global_active_power", col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.off()
View(data)
plot(data$"Date",data$"Global_active_power")
plot(data$"Time",data$"Global_active_power")
plot(data$"Time",data$"Global_active_power", ylab = "Global Active Power (kilowatts)")
plot(data$"Time",data$"Global_active_power", ylab = "Global Active Power (kilowatts)")
plot(data$"Time",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = 1)
plot(data$"Time" & data$"Date",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = 1)
plot(x = data$"Time" & data$"Date",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = 1)
paste(data$"Date",data$"Time")
cbind(data,paste(data$"Date",data$"Time"))
data <- cbind(data,paste(data$"Date",data$"Time"))
View(data)
datetime <- paste(data$"Date",data$"Time"))
datetime <- paste(data$"Date",data$"Time")
names(datetime) <- datetime
cbind(datetime,data)
data <- cbind(datetime,data)
##Read the names from the dataset - to be used later
datanames <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, nrows = 1)
### read the dataset only the dates we want.
## Read from line 66638 to 69517
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = FALSE , skip = 66638, nrows = 2879)
### put the names on my subset of the data
names(data) <- names(datanames)
###need to use the strptime arugment
datetime <- paste(data$"Date",data$"Time")
data <- cbind(datetime,data)
View(data)
datetime <- striptime(datetime, format = "%d/%m/%Y %H:%M:%S")
datetime <- strptime(datetime, format = "%d/%m/%Y %H:%M:%S")
plot(x = data$"Datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = 1)
plot(data$"Datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = 1)
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = 1)
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = l)
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "l)
)
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "l")
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)")
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "h")
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "h")
dev.off()
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "h")
plot(data$"Date",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "h")
plot(data$"time",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "h")
plot(data$"Time",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "h")
as.date(datetime)
as.Date(datetime)
data <- cbind(datetime,data)
as.Date(datetime)
plot(data$"datatime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "h")
##Read the names from the dataset - to be used later
datanames <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, nrows = 1)
### read the dataset only the dates we want.
## Read from line 66638 to 69517
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = FALSE , skip = 66638, nrows = 2879)
### put the names on my subset of the data
names(data) <- names(datanames)
###need to use the strptime arugment
datetime <- paste(data$"Date",data$"Time")
datetime <- strptime(datetime, format = "%d/%m/%Y %H:%M:%S")
data <- cbind(datetime,data)
plot(data$"datatime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "h")
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "h")
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "l")
##Read the names from the dataset - to be used later
datanames <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, nrows = 1)
### read the dataset only the dates we want.
## Read from line 66638 to 69517
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = FALSE , skip = 66638, nrows = 2879)
### put the names on my subset of the data
names(data) <- names(datanames)
###need to use the strptime arugment
datetime <- paste(data$"Date",data$"Time")
datetime <- strptime(datetime, format = "%d/%m/%Y %H:%M:%S")
data <- cbind(datetime,data)
###view the amazing graph
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "l")
##save it as a png
png("plot2.png")
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", type = "l")
dev.off()
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", xlab = "",  type = "l")
##Read the names from the dataset - to be used later
datanames <- read.table(file = "household_power_consumption.txt", sep = ";", header = TRUE, nrows = 1)
### read the dataset only the dates we want.
## Read from line 66638 to 69517
data <- read.table(file = "household_power_consumption.txt", sep = ";", header = FALSE , skip = 66638, nrows = 2879)
### put the names on my subset of the data
names(data) <- names(datanames)
###need to use the strptime arugment
datetime <- paste(data$"Date",data$"Time")
datetime <- strptime(datetime, format = "%d/%m/%Y %H:%M:%S")
data <- cbind(datetime,data)
###view the amazing graph
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", xlab = "",  type = "l")
##save it as a png
png("plot2.png")
plot(data$"datetime",data$"Global_active_power", ylab = "Global Active Power (kilowatts)", xlab = "",  type = "l")
dev.off()
